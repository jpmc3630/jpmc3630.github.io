{"version":3,"sources":["assets/images/colors.svg","assets/images/logo.svg","assets/images/notepad.svg","data.js","assets/components/appLoadingError.js","assets/containers/NavBar.js","assets/components/Pipes.js","assets/components/Base.js","assets/images/final.png","assets/components/About.js","assets/components/Skills.js","assets/containers/Projects.js","assets/components/Contact.js","assets/components/Footer.js","assets/containers/App.js","index.js"],"names":["githubUsername","filteredProjects","projectData","image","colors","react","notepad","contactInfo","email","linkedin","stackoverflow","phone","hackerrank","github","AppError","theme","error","newTheme","className","id","AppLoading","NavBar","setTheme","useState","expanded","setExpanded","themeLogo","setThemeLogo","useEffect","Navbar","bg","variant","fixed","expand","Brand","href","target","rel","Toggle","aria-controls","onClick","Collapse","Nav","Item","activeClass","to","spy","smooth","duration","offset","setTimeout","Form","Check","type","label","onChange","Pipes","canvas","document","getElementById","ctx","getContext","width","height","fillStyle","grow","centerx","centery","count","x","y","bop","setInterval","beginPath","arc","Math","PI","fill","stroke","closePath","r","g","b","moveTo","angle","cos","sin","lineTo","strokeStyle","style","Base","githubUrl","name","link","bio","twitter","About","src","profilePic","alt","Skills","spanStyle","fontWeight","fontStyle","textDecoration","Projects","setIsLoading","setIsError","setError","setData","fetch","then","response","status","json","statusText","Error","data","check","length","tempObj","forEach","element","index","every","undefined","newData","filter","projects","includes","i","imageInfo","catch","console","log","mail","Contact","avatar","mailChimp","Footer","App","isLoading","isError","apiUrl","title","homeData","avatar_url","html_url","blog","twitter_username","ReactDOM","render"],"mappings":"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","file":"static/js/main.b16e07bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/colors.1aa9d066.svg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/notepad.00bfae70.svg\";","// https://react-icons.github.io/react-icons/\nimport {\n  FaHtml5,\n  FaCss3Alt,\n  FaSass,\n  FaBootstrap,\n  FaReact,\n  FaNpm,\n  FaGitAlt,\n  FaGithubSquare,\n  FaAws\n} from \"react-icons/fa\";\nimport { SiJavascript } from \"react-icons/si\";\n\n// Projects Images (add your images to the /assets/images directory and import below)\nimport colors from \"./assets/images/colors.svg\";\nimport react from \"./assets/images/logo.svg\";\nimport notepad from \"./assets/images/notepad.svg\";\n\n/* START HERE - add your GitHub username below\n ************************************************************** */\nexport const githubUsername = \"jpmc3630\";\n\n/* Skills\n ************************************************************** */\n// Add or remove skills in the SAME format below, there must be one icon imported above per skill below and 3 skills per row\nexport const skillData = [\n  {\n    id: 1,\n    skill: <FaHtml5 className=\"display-4\" />,\n    name: \"HTML5\",\n  },\n  {\n    id: 2,\n    skill: <FaCss3Alt className=\"display-4\" />,\n    name: \"CSS3\",\n  },\n  {\n    id: 3,\n    skill: <SiJavascript className=\"display-4\" />,\n    name: \"JavaScript\",\n  },\n  {\n    id: 4,\n    skill: <FaSass className=\"display-4\" />,\n    name: \"Sass\",\n  },\n  {\n    id: 5,\n    skill: <FaBootstrap className=\"display-4\" />,\n    name: \"Bootstrap\",\n  },\n  {\n    id: 6,\n    skill: <FaReact className=\"display-4\" />,\n    name: \"React\",\n  },\n  {\n    id: 7,\n    skill: <FaNpm className=\"display-4\" />,\n    name: \"npm\",\n  },\n  {\n    id: 8,\n    skill: <FaGitAlt className=\"display-4\" />,\n    name: \"Git\",\n  },\n  {\n    id: 9,\n    skill: <FaGithubSquare className=\"display-4\" />,\n    name: \"GitHub\",\n  },\n];\n\n/* Projects\n ************************************************************** */\n// List the repo names you want to include (they will be sorted alphabetically), leave the array empty if you want to include everything\nexport const filteredProjects = [\n  \"Background-Generator\"\n];\n\n// List the card images you want to include in the same order as the repos above (alphabetically)\n// There MUST be one image per repo above or the defualt image will be applied\nexport const projectData = [\n  {\n    image: colors,\n  },\n  {\n    image: react,\n  },\n  {\n    image: notepad,\n  },\n];\n\n/* Contact Info\n ************************************************************** */\n// Share the contact info you are comfortable with (no dashes for phone numbers)\n// If no info provided a button with a link to mailchimp will be rendered, update the link if you want to use this option\nexport const contactInfo = {\n  email: \"jamespmcglone@gmail.com\",\n  linkedin: \"https://www.linkedin.com/in/james-mcglone-44114054/\",\n  stackoverflow: \"https://stackoverflow.com/users/12001877/james-mcglone\",\n  phone: \"+61 421 44 22 36\",\n  hackerrank: \"https://www.hackerrank.com/jamespmcglone\",\n  github: \"https://github.com/jpmc3630/\"\n};\n","export const AppError = ({ theme, error }) => {\n  const newTheme = `${theme} app-error d-flex flex-column min-vh-100 justify-content-center align-items-center`;\n\n  return (\n    <div className={newTheme}>\n      <div className=\"container text-center\">\n        <h1 className=\"\">Sorry, something went wrong.</h1>\n        <p className=\"lead\">\n          <span id=\"error\">Error: </span> {error}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport const AppLoading = ({ theme }) => {\n  const newTheme = `${theme} d-flex flex-column min-vh-100 justify-content-center align-items-center`;\n\n  return (\n    <div className={newTheme}>\n      <h1 className=\"loading\">Loading...</h1>\n    </div>\n  );\n};\n","import { useState, useEffect } from \"react\";\n// https://react-bootstrap.github.io/components/navbar/\nimport { Form, Nav, Navbar } from \"react-bootstrap\";\n// https://www.npmjs.com/package/react-scroll\nimport { Link } from \"react-scroll\";\n// https://react-icons.github.io/react-icons/\nimport { RiMoonClearFill, RiSunLine } from \"react-icons/ri\";\nimport SocialLinks from \"../components/SocialLinks.js\";\nimport { FaGithub, FaLink, FaTwitter } from \"react-icons/fa\";\n\n// Image\n// import logo from \"../images/logo.svg\";\n\nconst NavBar = ({ theme, setTheme }) => {\n  const [expanded, setExpanded] = useState(false);\n  const [themeLogo, setThemeLogo] = useState(<RiMoonClearFill />);\n\n  const updateTheme = () => {\n    theme === \"dark\" ? setTheme(\"light\") : setTheme(\"dark\");\n    setTimeout(() => {\n      setExpanded(false);\n    }, 500);\n  };\n\n  const socialData = {\n    githubUrl: \"http://github.com/jpmc3630\",\n    \n  };\n\n  useEffect(() => {\n    theme === \"dark\"\n      ? setThemeLogo(<RiMoonClearFill />)\n      : setThemeLogo(<RiSunLine />);\n  }, [theme]);\n\n  return (\n    <Navbar\n      className={theme}\n      bg=\"dark\"\n      variant=\"dark\"\n      fixed=\"top\"\n      expand=\"lg\"\n      expanded={expanded}\n    >\n      <Navbar.Brand href=\"http://github.com/jpmc3630\" target=\"_blank\" rel=\"noreferrer\">\n\n    <FaGithub />\n      </Navbar.Brand>\n      <Navbar.Toggle\n        aria-controls=\"basic-navbar-nav\"\n        // Set the expanded state with the toggle button\n        onClick={() => setExpanded(expanded ? false : true)}\n      />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"h4\">\n          <Nav.Item className=\"mr-3\">\n            <Link\n              className=\"text-white\"\n              activeClass=\"active\"\n              to=\"home\"\n              spy={true}\n              smooth={true}\n              duration={350}\n              offset={0}\n              // Handle collapse on select\n              onClick={() =>\n                setTimeout(() => {\n                  setExpanded(false);\n                }, 500)\n              }\n            >\n              Home\n            </Link>\n          </Nav.Item>\n          <Nav.Item className=\"mr-3\">\n            <Link\n              className=\"text-white\"\n              activeClass=\"active\"\n              to=\"about\"\n              spy={true}\n              smooth={true}\n              duration={350}\n              offset={0}\n              // Handle collapse on select\n              onClick={() =>\n                setTimeout(() => {\n                  setExpanded(false);\n                }, 500)\n              }\n            >\n              About\n            </Link>\n          </Nav.Item>\n          <Nav.Item className=\"mr-3\">\n            <Link\n              className=\"text-white\"\n              activeClass=\"active\"\n              to=\"skills\"\n              spy={true}\n              smooth={true}\n              duration={300}\n              offset={0}\n              // Handle collapse on select\n              onClick={() =>\n                setTimeout(() => {\n                  setExpanded(false);\n                }, 500)\n              }\n            >\n              Skills\n            </Link>\n          </Nav.Item>\n          <Nav.Item className=\"mr-3\">\n            <Link\n              className=\"text-white\"\n              activeClass=\"active\"\n              to=\"projects\"\n              spy={true}\n              smooth={true}\n              duration={350}\n              offset={0}\n              \n              // Handle collapse on select\n              onClick={() =>\n                setTimeout(() => {\n                  setExpanded(false);\n                }, 500)\n              }\n            >\n              Projects\n            </Link>\n          </Nav.Item>\n          <Nav.Item className=\"mr-3\">\n            <Link\n              className=\"text-white\"\n              activeClass=\"active\"\n              to=\"contact\"\n              spy={true}\n              smooth={true}\n              duration={350}\n              offset={0}\n              \n              // Handle collapse on select\n              onClick={() =>\n                setTimeout(() => {\n                  setExpanded(false);\n                }, 500)\n              }\n            >\n              Contact\n            </Link>\n          </Nav.Item>\n        </Nav>\n        <Form className=\"d-flex w-100 justify-content-end\">\n          <Form.Check\n            id=\"custom-switch\"\n            className=\"text-white\"\n            type=\"switch\"\n            label={themeLogo}\n            onChange={updateTheme}\n          />\n        </Form>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React, { useState, useEffect } from 'react';\n\nconst Pipes = () => {\n\n  const canvasStyle = {\n    // zIndex: '1',\n    // // position: 'absolute',\n    // // top: 0,\n    // // left: 0,\n    // width: 400,\n    // height: 400,\n  };\n\n  useEffect(() => {\n\n    const canvas = document.getElementById('canvas') // sets up our canvas a bit\n      const ctx = canvas.getContext('2d');\n      canvas.width = 200;\n      canvas.height = 200;\n      ctx.fillStyle = \"black\";\n      // ctx.fillRect(0, 0, canvas.width, canvas.height);\n      // let t0 = new Date().getTime();\n      let grow = true\n      // (function () {\n          var centerx = ctx.canvas.width / 2;\n          var centery = ctx.canvas.height / 2;\n          let a=.1\n          let b=.1\n          let count = 1;\n          let x=centerx\n          let y=centery\n\n          let boop = .1\n          let bop = 500\n          setInterval(() => {\n            if (grow == true) {\n              bop += 1;\n            } else {\n              bop -= 1;\n            }\n            if (bop >= 1000) {\n              grow = false\n            }\n\n            if (bop <= 800) {\n              grow = true\n            }\n\n            ctx.beginPath();\n            ctx.arc(centerx, centery, 80, 0, 2 * Math.PI, false);\n            ctx.fillStyle = 'black';\n            ctx.fill();\n            ctx.stroke();\n            ctx.closePath();\n\n            // ctx.fillRect(0, 0, canvas.width, canvas.height);\n            for (let r = 1; r <= 255; r+=8) {\n\n              \n              for (let g = 88; g <= 255; g+=8) {\n\n                \n                for (let b = 1; b <= 3; b+=8) {\n                  \n         \n\n                  ctx.beginPath();\n                  ctx.moveTo(x, y);\n                  \n                  let angle = (boop*bop) * count;\n                  \n                  x = centerx + (a + b * angle) * Math.cos(angle);\n                  y = centery + (a + b * angle) * Math.sin(2^-2 * angle);\n                  \n                  ctx.lineTo(x, y);\n                  \n                  ctx.strokeStyle = `RGB(${r},${g},200)` \n                  ctx.stroke();\n                  ctx.closePath()\n                \n                  \n                  if (count > -50) {\n                    count -= .001;\n                  } else {\n                    count += .001;\n                  }\n                \n                  if (count < .73) count = 1\n                  // if (count < .7) count = 10\n                  // if (count < .74) count = 1\n                  // console.log(count)\n                }\n              }\n            }\n   \n            // console.log(count);\n          }, 100);\n\n      // })();\n  }, []);\n    // let t1 = new Date().getTime();\n    // console.log(t1-t0)\n\n  return (\n    <div>\n         <canvas id=\"canvas\" style={canvasStyle}></canvas>\n    </div>\n  );\n};\n\nexport default Pipes;","// https://www.npmjs.com/package/react-scroll\nimport { Link } from \"react-scroll\";\n// https://react-icons.github.io/react-icons/\nimport { FaChevronCircleDown } from \"react-icons/fa\";\nimport NavBar from \"../containers/NavBar\";\n\n\n// Image\nimport Pipes from \"./Pipes.js\";\n\nconst Base = ({ theme, setTheme, githubUrl, name, link, bio, twitter }) => {\n  const newTheme = `${theme} d-flex flex-column min-vh-100 justify-content-center`;\n\n\n\n  return (\n    <header id=\"home\" className={newTheme}>\n      <NavBar theme={theme} setTheme={setTheme} />\n      <div className=\"container text-center\">\n      <h2>James McGlone</h2>\n        {/* <hr /> */}\n        <p>FULL STACK DEVELOPER</p>\n        <br />\n        <Pipes\n          // className=\"logo spin img-fluid\"\n          // src={logo}\n          // alt=\"React Logo\"\n          // height=\"10%\"\n          // width=\"10%\"\n        />\n        <br />\n        <p>\n          I like to make things happen with code.\n        </p>\n        \n        <Link className=\"scroll\" to=\"about\" smooth={true} duration={750}>\n          <FaChevronCircleDown id=\"scroll-down\" />\n        </Link>\n      </div>\n    </header>\n  );\n};\n\nexport default Base;\n","export default __webpack_public_path__ + \"static/media/final.ccf21efe.png\";","import { skillData } from \"../../data\";\n\nimport profilePic from \"../images/final.png\";\n\nconst About = ({ theme }) => {\n  const newTheme = `${theme} d-flex flex-column min-vh-100 justify-content-center`;\n  const spanStyle = {\n    fontWeight:'400px',\n    fontStyle:'normal',\n    textDecoration:'none',\n    color:'#000'\n  }\n\n  return (\n    <section id=\"about\" className={newTheme}>\n      <div className=\"container text-center\">\n        <h2>About</h2>\n        <hr />\n        {/* <div className=\"row row-cols-3\">\n          {skillData.map((skills) => {\n            return (\n              <figure className=\"col\" key={skills.id}>\n                {skills.skill}\n                <figcaption>{skills.name}</figcaption>\n              </figure>\n            );\n          })}\n        </div> */}\n        <div className=\"d-flex\">\n\n        <div className=\"container text-left\">\n            <img src={profilePic} style={{width: '23%'}} className=\"img-fluid rounded float-left mr-3\" alt=\"James McGlone\" />\n\n            <p>\n              I'm a passionate developer with a lifelong interest in web and software development.\n              I have proven skills in full stack development right through from building front-end UI/UX, beautiful back-ends, optimizing database usage, and designing and implementing cost effective and reliable hosting solutions. \n            </p>\n            <p>\n            I enjoy pushing myself to continually improve and expand my understanding of technologies across different stacks. \n            I get a kick out of creating and maintaining well oiled machines.\n            </p>\n            <p>\n              My comfort zone is working with modern javascript frameworks (React and Vue), and NodeJS or Laravel PHP back-ends on Linux machines.\n              That said, I love to break out of my comfort zone and have an interest in everything computer science related and am happiest when I'm learning something new.\n            </p>\n            <p>\n              Recognised as a productive, creative and resourceful problem solver with a strong ability to communicate effectively with clients and colleagues.\n              When I'm not programming I'm usually working on projects in lighting, electronics, film making and synthesizers, or rehearsing for the occasional gig.\n            </p>\n            \n          </div>\n\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n","import { skillData } from \"../../data\";\n\nconst Skills = ({ theme }) => {\n  const newTheme = `${theme} d-flex flex-column min-vh-100 justify-content-center`;\n  const spanStyle = {\n    fontWeight:'400px',\n    fontStyle:'normal',\n    textDecoration:'none'\n    // color:'#000'\n  }\n\n  return (\n    <section id=\"skills\" className={newTheme}>\n      <div className=\"container text-center\">\n        <h2>Skills</h2>\n        <hr />\n        {/* <div className=\"row row-cols-3\">\n          {skillData.map((skills) => {\n            return (\n              <figure className=\"col\" key={skills.id}>\n                {skills.skill}\n                <figcaption>{skills.name}</figcaption>\n              </figure>\n            );\n          })}\n        </div> */}\n        <div className=\"d-flex justify-content-center\">\n\n            <table className=\"tg\">\n            <tbody>\n              <tr>\n                <td className=\"tg-baqh\"><span style={spanStyle}>Deliverables</span></td>\n                <td className=\"tg-0lax\"><span style={spanStyle}>SPA / PWA, Hybrid Web-Native iOS, tvOS &amp; Android Apps, UX/UI, </span><br></br><span style={spanStyle}>Database Architecture, API Development, Scalable Hosting.</span></td>\n              </tr>\n              <tr>\n                <td className=\"tg-baqh\"><span style={spanStyle}>Languages</span></td>\n                <td className=\"tg-0lax\"><span style={spanStyle}>HTML, CSS, Javascript & jQuery, PHP, Bash.</span></td>\n              </tr>\n              <tr>\n                <td className=\"tg-baqh\"><span style={spanStyle}>Frontend Frameworks</span></td>\n                <td className=\"tg-0lax\"><span style={spanStyle}>ReactJS, React-Native, VueJS, Ionic Capacitor.</span></td>\n              </tr>\n              <tr>\n                <td className=\"tg-baqh\"><span style={spanStyle}>Backend</span></td>\n                <td className=\"tg-0lax\"><span style={spanStyle}>NodeJS, ExpressJS, Laravel PHP, Nginx.</span></td>\n              </tr>\n              <tr>\n                <td className=\"tg-baqh\"><span style={spanStyle}>Database</span></td>\n                <td className=\"tg-0lax\"><span style={spanStyle}>MySQL, SQLite, MongoDB, Google Firebase, Laravel Eloquent.</span></td>\n              </tr>\n              <tr>\n                <td className=\"tg-baqh\"><span style={spanStyle}>Testing</span></td>\n                <td className=\"tg-0lax\"><span style={spanStyle}>TDD, PHPUnit, Dusk, Cypress.</span></td>\n              </tr>\n              <tr>\n                <td className=\"tg-baqh\"><span style={spanStyle}>Cloud</span></td>\n                <td className=\"tg-0lax\"><span style={spanStyle}>AWS, Microsoft AppCenter, Google Cloud, Heroku, CI/CD, Docker.</span></td>\n              </tr>\n              <tr>\n                <td className=\"tg-baqh\"><span style={spanStyle}>Project Management</span></td>\n                <td className=\"tg-0lax\"><span style={spanStyle}>Git, Github Projects, Trello, Agile Methodology, Kanban, Scrum, Remote.</span></td>\n              </tr>\n              <tr>\n                <td className=\"tg-baqh\"><span style={spanStyle}>Other Technologies</span></td>\n                <td className=\"tg-0lax\"><span style={spanStyle}>MapBox, WebMidi, WebRTC, </span><span>Websockets/SocketIO.</span></td>\n              </tr>\n              <tr>\n                <td className=\"tg-baqh\"><span style={spanStyle}>Hardware</span></td>\n                <td className=\"tg-0lax\"><span style={spanStyle}>Arduino, Raspberry Pi, Hardware interface design.</span></td>\n              </tr>\n              <tr>\n                <td className=\"tg-baqh\"><span style={spanStyle}>Software</span></td>\n                <td className=\"tg-0lax\"><span style={spanStyle}>VScode, Android Studio, Xcode, Adobe Photoshop &amp; Premiere Pro,</span><br></br><span>Davinci Resolve, Ableton Live, Audacity, QLC+ lighting controller.</span></td>\n              </tr>\n            </tbody>\n            </table>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Skills;\n","import React, { useState, useEffect } from \"react\";\n// https://react-bootstrap.github.io/components/cards/#card-columns\nimport { CardColumns, Card } from \"react-bootstrap\";\nimport { filteredProjects, projectData } from \"../../data\";\nimport {\n  ProjectsError,\n  ProjectsLoading,\n} from \"../components/projectsLoadingError\";\n\n// Image\nimport defualtImage from \"../images/logo.svg\";\n\nconst Projects = ({ theme, githubUsername }) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n\n  const githubUrl = `https://api.github.com/users/${githubUsername}/repos`;\n\n  useEffect(() => {\n    fetch(githubUrl)\n      .then((response) => {\n        if (response.status >= 200 && response.status <= 299) {\n          return response.json();\n        } else {\n          setIsError(true);\n          setIsLoading(false);\n          setError(response.statusText);\n          throw new Error(response.statusText);\n        }\n      })\n      .then((data) => {\n        let check = false;\n        if (filteredProjects.length !== 0) {\n          let tempObj = {};\n          data.forEach((element, index) => {\n            tempObj[element.name] = index;\n          });\n          check = filteredProjects.every((element) => {\n            return tempObj[element] !== undefined;\n          });\n        }\n        if (check) {\n          let newData = data.filter((projects) =>\n            filteredProjects.includes(projects.name)\n          );\n          if (projectData.length === filteredProjects.length) {\n            for (let i = 0; i < projectData.length; i++) {\n              newData[i].imageInfo = projectData[i];\n            }\n          }\n          setData(newData);\n          setIsLoading(false);\n        } else {\n          setData(data);\n          setIsLoading(false);\n        }\n      })\n      .catch((error) => console.log(error));\n  }, [githubUrl]);\n\n  const newTheme = `${theme} d-flex flex-column min-vh-100 justify-content-center align-items-center text-center`;\n\n  // if (isLoading) {\n  //   return <ProjectsLoading theme={theme} />;\n  // }\n\n  // if (isError) {\n  //   return <ProjectsError theme={theme} error={error} />;\n  // }\n\n  // There MUST be one image per repo (see projectData.js)\n  // if (data.length === projectData.length) {\n  //   return (\n  //     <section id=\"projects\" className={newTheme}>\n  //       <div className=\"container\">\n  //         <h2>Projects</h2>\n  //         <hr />\n  //         <CardColumns>\n  //           {data.map((projects) => {\n  //             return (\n  //               <Card key={projects.id}>\n  //                 <Card.Img\n  //                   variant=\"top\"\n  //                   src={projects.imageInfo.image}\n  //                   alt=\"Project Image\"\n  //                 />\n  //                 <Card.Body>\n  //                   <a\n  //                     href={projects.html_url}\n  //                     target=\"_blank\"\n  //                     rel=\"noreferrer\"\n  //                   >\n  //                     <Card.Title className=\"d-inline-block\">\n  //                       {projects.name}\n  //                     </Card.Title>\n  //                   </a>\n  //                 </Card.Body>\n  //               </Card>\n  //             );\n  //           })}\n  //         </CardColumns>\n  //       </div>\n  //     </section>\n  //   );\n  // }\n\n  return (\n    <section id=\"projects\" className={newTheme}>\n      <div className=\"container text-center\">\n        <h2>Projects</h2>\n       \n<p>\nThese are a few personal projects I've been working on recently.\n</p>\n  </div>\n  <div className=\"container text-left\">\n\n\n\n<hr />\n<h5>Demoscene Visualisations. May 2021.</h5>\n\n<p>\nRecently while working on a coding challenge that involved rendering colour palletes at certain bit-depths, I stumbled onto some striking pattern renders and decided to make a browser based 'Demo' scene in javascript. I came up with a handful of scenes and started working on some logic to build them into one piece of art. It's a bit of light-hearted fun demonstrating the power of HTML5 canvas.\n</p>\n\n<a href=\"https://jpmc3630.github.io/funfunfun/\" target=\"_blank\" rel=\"noreferrer\">\nLive Demo\n</a>\n\n\n\n\n<hr />\n<h5>Map Tile Server hosted on AWS. May 2021.</h5>\n<p>\nRecently a friend came to me with an emerging dilemma. They had built a data visualisation project and released it to Reddit. It then spread to facebook and went viral. After just 2 hours of going live, the app was getting around ten thousand visitors per hour. The problem was that the data was visualised on a map, which was built using the MapBox SDK, and relied on the MapBox API to serve the map tiles. The site had already exceeded the 50'000 free map tiles per month, and was chewing through about 100'000 tile requests per hour, at a cost of $5 per ten thousand. The app was a free data project and generated no revenue - there was no budget - and my friend thought he would have to close project down right as it was in it's prime.\n</p>\n<p>\nI wrote a bash script that automated spinning up a map server instance. It installed a docker image of an open source tile server, fetched appropriate maps for our region, configured Nginx and installed an SSL certificate. The servers were deployed on an AWS cluster of EC2 instances, and within a few hours a solution was up and running that cost next to nothing. We were serving beautiful vector maps, super fast, and had raster maps as fall back for older mobile devices.\n</p>\n\n\n\n\n\n<hr />\n<h5>Interactive LED screen at arts festival. April 2021.</h5>\n\n<p>\nThis was an interactive LED screen for an arts festival at regional Burning Man event. \nThe concept was to distribute QR codes around the festival, to give people access to a web interface \nthat allowed them to post messages in real time to a giant LED screen. \nThis turned out to be a pretty complicated project, and about as full stack as it gets. \n</p>\n<p>\n  \n  Firstly it involved building a controller to drive a giant LED matrix I bought auction, by modifying a community driven C++ library, and running it on a Raspberry Pi. \n  It took a lot of hacking to get the HUB75A standard LED driver library to work with our screen. \n  Including building a wiring harness, a custom multiplexer to get the screen to display correctly, and a custom pixel mapper to use the screen in the appropriate orientation!\n  I wrote a NodeJS program on the Pi to connect to a web server and maintain a websocket connection and handle the communications between the web interface and the hardware running off the Pi. \n  </p>\n  <p>\n  So there were three parts, the code running on the Pi, the web server, and the web interface. \n  The screen was connected via a Telstra pre-paid sim card (with no addressable IP), in regional WA, outdoors, in weather, running off a generator. \n  The project was a success, it generated a lot of public interest, had hundreds of messges posted and was considered a valuable contribution to the arts festival.\n</p>\n<a href=\"https://github.com/jpmc3630/bs-screen\" target=\"_blank\" rel=\"noreferrer\">\nRaspberry Pi NodeJS Repo\n</a><br></br>\n<a href=\"https://github.com/jpmc3630/blazing-marquee\" target=\"_blank\" rel=\"noreferrer\">\nNodeJS Webserver and ReactJS Web Interface Repo\n</a>\n\n\n\n\n<hr />\n<h5>Mutliplayer online tvOS/mobile trivia game. February 2021.</h5>\n\n\n<p>\n This is a multiplayer party game that allows players to use their own phones and mobile internet connections via browser to connect to a game created by a tvOS app. The game is intialised by the TV and a code is shown on the screen, which users enter into a web site, and join the game. I was exploring the options for Apple/AndroidTV and built a prototype using NodeJS for the game server, React Native for tvOS for the TV part, and ReactJS for the website players use to connect to the game and play along asnwering the questions displayed on the TV.\n</p>\n\n<p>\nI got this to working prototype stage, but have decided to remake the tvOS part using Unity game engine. The main reason for this, is that at the end of the day, the game lacks visual charm. The trivia aspect is fun, but I didn't see it as worthwile to spend many hours trying to jazz up a fairly bland React-Native interface on a tv screen! I decided it would be a more fruitful pursuit to build the game in Unity, as it would ultimately look alot better, future proof my code base to a large extent, and also make it cross platform with some minimal changes for input controls. This is an ongoing project.\n</p>\n\n<a href=\"https://github.com/jpmc3630/tvos-trivia\" target=\"_blank\" rel=\"noreferrer\">\ntvOS App Repo\n</a>\n<br></br>\n<a href=\"https://github.com/jpmc3630/tvtrivia/\" target=\"_blank\" rel=\"noreferrer\">\nNodeJS Game Server and ReactJS Webserver Repo\n</a>\n\n      </div>\n      <br></br>\n      <br></br>\n    </section>\n    \n  );\n};\n\nexport default Projects;\n","// https://www.npmjs.com/package/react-scroll\nimport { Link } from \"react-scroll\";\n// https://react-icons.github.io/react-icons/\nimport { FiMail } from \"react-icons/fi\";\nimport { FaChevronCircleUp } from \"react-icons/fa\";\nimport { contactInfo } from \"../../data\";\nimport profilePic from \"../images/final.png\";\n\nconst mail = `mailto:${contactInfo.email}`;\nconst phone = `tel:${contactInfo.phone}`;\n\nconst Contact = ({ theme, avatar, name }) => {\n  const newTheme = `${theme} d-flex flex-column min-vh-100 justify-content-center`;\n\n  return (\n    <section id=\"contact\" className={newTheme}>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n      <div className=\"container text-center\">\n        <h2>Contact</h2>\n        <hr />\n        <div className=\"row align-items-center\">\n          <div className=\"col-lg-6\">\n            <img src={profilePic} alt={name} />\n          </div>\n          <div className=\"col-lg-6\">\n            <h3>{name}</h3>\n            {contactInfo.email && contactInfo.email !== \"\" ? (\n              <a href={mail}>\n                Email <br></br><span>{contactInfo.email}</span>\n              </a>\n            ) : (\n              \"\"\n            )}\n            <br />\n            {contactInfo.phone && contactInfo.phone !== \"\" ? (\n              <a href={phone}>\n                Phone <br></br><span>{contactInfo.phone}</span>\n              </a>\n            ) : (\n              \"\"\n            )}\n            {(!contactInfo.email || contactInfo.email === \"\") &&\n            (!contactInfo.phone || contactInfo.phone === \"\") ? (\n              <a href={contactInfo.mailChimp} target=\"_blank\" rel=\"noreferrer\">\n                <button type=\"button\" className=\"btn btn-secondary btn-lg\">\n                  <FiMail /> Contact me\n                </button>\n              </a>\n            ) : (\n              \"\"\n            )}\n            <br />\n            <a href={contactInfo.linkedin} target=\"_blank\" rel=\"noreferrer\">LinkedIn</a><br></br>\n            <a href={contactInfo.github} target=\"_blank\" rel=\"noreferrer\">Github</a><br></br>\n            <a href={contactInfo.stackoverflow} target=\"_blank\" rel=\"noreferrer\">Stack Overflow</a><br></br>\n            <a href={contactInfo.hackerrank} target=\"_blank\" rel=\"noreferrer\">Hacker Rank</a>\n          </div>\n        </div>\n        <Link className=\"scroll\" to=\"home\" smooth={true} duration={750}>\n          <FaChevronCircleUp id=\"scroll-up\" />\n        </Link>\n      </div>\n      <br></br>\n            <br></br>\n            <br></br>\n            <br></br>\n    </section>\n  );\n};\n\nexport default Contact;\n","// import SocialLinks from \"./SocialLinks\";\n// import { FaGithub, FaLink, FaTwitter } from \"react-icons/fa\";\n\nconst Footer = ({ githubUrl, link, twitter }) => {\n  return (\n    <footer className=\"d-flex flex-column justify-content-center align-items-center bg-dark\">\n      {/* <SocialLinks githubUrl={githubUrl} link={link} twitter={twitter} /> */}\n      {/* <a href=\"http://github.com/jpmc3630\" target=\"_blank\" rel=\"noreferrer\">\n        <FaGithub />\n      </a> */}\n      <br></br>\n      <p className=\"text-muted text-center\">© 2020 James McGlone</p>\n      {/* <br></br> */}\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useState, useEffect } from \"react\";\nimport { githubUsername } from \"../../data\";\nimport { AppLoading, AppError } from \"../components/appLoadingError\";\nimport Base from \"../components/Base\";\nimport About from \"../components/About\";\nimport Skills from \"../components/Skills\";\nimport Projects from \"./Projects\";\nimport Contact from \"../components/Contact\";\nimport Footer from \"../components/Footer\";\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  // Change the defualt theme below (\"dark\" or \"light\")\n  const [theme, setTheme] = useState(\"dark\");\n\n  const apiUrl = `https://api.github.com/users/${githubUsername}`;\n\n  useEffect(() => {\n    fetch(apiUrl)\n      .then((response) => {\n        if (response.status >= 200 && response.status <= 299) {\n          return response.json();\n        } else {\n          setIsError(true);\n          setIsLoading(false);\n          setError(response.statusText);\n          throw new Error(response.statusText);\n        }\n      })\n      .then((data) => {\n        setData(data);\n        document.title = data.name;\n        // Comment out setIsLoading below to test Loading screen with a valid username (may require reloading the page)\n        setIsLoading(false);\n      })\n      .catch((error) => console.log(error));\n  }, [apiUrl]);\n\n  if (isLoading) {\n    return <AppLoading theme={theme} />;\n  }\n\n  if (isError) {\n    return <AppError theme={theme} error={error} />;\n  }\n\n  const homeData = {\n    avatar: data.avatar_url,\n    githubUrl: data.html_url,\n    name: data.name,\n    link: data.blog,\n    bio: data.bio,\n    twitter: data.twitter_username,\n  };\n\n  return (\n    <>\n      <Base theme={theme} setTheme={setTheme} {...homeData} />\n      <main>\n        <About theme={theme} />\n        <Skills theme={theme} />\n        <Projects theme={theme} githubUsername={githubUsername} />\n        <Contact theme={theme} avatar={homeData.avatar} name={homeData.name} />\n      </main>\n      <Footer\n        githubUrl={homeData.githubUrl}\n        link={homeData.link}\n        twitter={homeData.twitter}\n      />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/scss/index.scss\";\nimport App from \"./assets/containers/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}